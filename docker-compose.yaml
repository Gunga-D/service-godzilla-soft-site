version: '2.4'

networks:
  service-godzilla-soft-site:
    driver: bridge
    name: service-godzilla-soft-site

services:
  subscription_worker:
    build:
      context: ./
      dockerfile: ./docker/SubscriptionCheckerWorker.Dockerfile
    env_file: ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy 
    networks:
      - service-godzilla-soft-site
    restart: unless-stopped
  registration_telegram:
    build:
      context: ./
      dockerfile: ./docker/RegistrationTelegram.Dockerfile
    env_file: ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy 
    networks:
      - service-godzilla-soft-site
    restart: unless-stopped
  order_delivery_worker:
    build:
      context: ./
      dockerfile: ./docker/OrderDeliveryWorker.Dockerfile
    env_file: ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy 
    networks:
      - service-godzilla-soft-site
    restart: unless-stopped
  single_replica_worker:
    build:
      context: ./
      dockerfile: ./docker/SingleReplicaWorker.Dockerfile
    env_file: ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy 
    networks:
      - service-godzilla-soft-site
    restart: unless-stopped
  web:
    build:
      context: ./
      dockerfile: ./docker/Service.Dockerfile
    env_file: ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy 
    ports:
      - "8080:8080"
    networks:
      - service-godzilla-soft-site
    restart: unless-stopped
  postgres:
    image: postgres:15
    networks:
      - service-godzilla-soft-site
    volumes:
      - ./db/data:/var/lib/postgresql/data
    env_file: ./.env.prod
    ports:
      - "55432:5432"
    healthcheck:
      test: ['CMD-SHELL', 'psql -d service-godzilla-soft-site -U postgres -c "select 1"']
      interval: 5s
      retries: 10
  psql_migrate:
    image: migrate/migrate
    networks:
      - service-godzilla-soft-site
    depends_on:
      postgres:
        condition: service_healthy 
    volumes:
      - ./db/changelog:/db/changelog
    env_file: ./.env.prod
    command: ["-path", "/db/changelog", "-database",  "postgres://postgres:$POSTGRES_PASSWORD@postgres:5432/service-godzilla-soft-site?sslmode=disable", "up"]
  rabbitmq:
    image: rabbitmq:3.10.7-management
    networks:
      - service-godzilla-soft-site
    restart: always
    env_file: ./.env.prod
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
  redis:
    image: redis:6.2-alpine
    networks:
      - service-godzilla-soft-site
    restart: always
    ports:
      - '6379:6379'
    env_file: ./.env.prod
    command: redis-server --save 20 1 --loglevel warning --requirepass $REDIS_PASSWORD --dbfilename dump.rdb
    volumes:
      - ./redis/data:/data